<div class="bg-slate-500 bg-pink-500 border-white border-8"></div>
<div
  class="mx-[32rem] my-3 border-2 border-black rounded-md bg-red-100"
  x-data="mastermind"
>
  <div>
    <div class="flex items-center">
      <template x-for="color in allColors">
        <div
          :class="
          if (currentColor == color)
            { return `rounded-full w-16 h-16 bg-${color}-500 cursor-pointer border-white border-8` }
          else { return `rounded-full w-16 h-16 bg-${color}-500 cursor-pointer` }"
          @click="currentColor = color; console.log(currentColor); console.log(color)"
        ></div>
      </template>
    </div>
  </div>
  <div>
    <h1>Rules:</h1>
    <ol>
      <li>1. NO EMPTY PEG</li>
      <li>2. NO REPEAT COLORS</li>
    </ol>
    <div class="flex flex-col items-center">
      <template x-for="row in 12">
        <div class="flex">
          <template x-for="column in 4"
            ><div
              class="rounded-full w-8 h-8"
              :class="`if (pegs[row - 1][column - 1] == null) { bg-black } else { bg-${pegs[row - 1][column - 1]}-500 }`"
            ></div
          ></template></div
      ></template>
    </div>
  </div>
</div>
<script>
  document.addEventListener("alpine:init", () => {
    Alpine.data("mastermind", () => ({
      pegs: [
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
      ],
      masterCode: [],
      allColors: ["pink", "red", "blue", "purple", "slate", "green"],
      currentColor: "pink",

      init() {
        this.createMasterCode();
        console.log(this.masterCode);
      },

      createMasterCode() {
        while (this.masterCode.length < 4) {
          const randomColor = this.getRandomColor();
          if (!this.masterCode.includes(randomColor)) {
            this.masterCode.push(randomColor);
          }
        }
      },

      getRandomColor() {
        const index = Math.floor(Math.random() * 6);
        return this.allColors[index];
      },
    }));
  });
</script>
