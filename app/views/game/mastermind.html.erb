<div
  class="mx-[32rem] my-3 border-2 border-black rounded-md bg-red-100"
  x-data="mastermind"
>
  <h1>Rules:</h1>
  <ol>
    <li>1. NO EMPTY PEG</li>
    <li>2. NO REPEAT COLORS</li>
  </ol>
  <div class="flex flex-col items-center">
    <template x-for="row in 12">
      <div class="flex">
        <template x-for="column in 4"
          ><div
            class="rounded-full w-8 h-8"
            :class="`if (pegs[row - 1][column - 1] == null) { bg-black } else { bg-${pegs[row - 1][column - 1]}-500 }`"
          ></div
        ></template></div
    ></template>
  </div>
</div>
<script>
  document.addEventListener("alpine:init", () => {
    Alpine.data("mastermind", () => ({
      pegs: [
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
        [null, null, null, null],
      ],
      masterCode: [],
      allColors: ["brown", "red", "blue", "purple", "orange", "green"],

      init() {
        this.createMasterCode();
        console.log(this.masterCode);
      },

      createMasterCode() {
        while (this.masterCode.length < 4) {
          const randomColor = this.getRandomColor();
          if (!this.masterCode.includes(randomColor)) {
            this.masterCode.push(randomColor);
          }
        }

        // homework: replace the masterCode variable with 4 unique colors, no nulls
      },

      getRandomColor() {
        const index = Math.floor(Math.random() * 6);
        return this.allColors[index];
      },
    }));
  });
</script>
