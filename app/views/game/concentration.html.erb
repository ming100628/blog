<div class="flex justify-center">
  <div class="grid grid-cols-4" x-data="concentration">
    <template x-for="(tile, index) in tiles">
      <div
        class="cursor-pointer h-16 w-16 border-yellow-300 border-2"
        @click="toggle(index); gameover()"
      >
        <img
          x-show="open[index]"
          :src="`https://robohash.org/${tiles[index]}.png?bgset=bg1&set=set4`"
          class="cursor-pointer h-16 w-16"
        />
      </div>
    </template>
  </div>
</div>

<script>
  document.addEventListener("alpine:init", () => {
    Alpine.data("concentration", () => ({
      open: {},
      tiles: [],
      firstOpenTile: null,
      secondOpenTile: null,
      rounds: 0,
      no_of_clicks: 0,
      init() {
        this.create8uniquepairs();
      },
      gameover() {
        let solvedTileCount = 0;
        for (key in Object.keys(this.open)) {
          if (this.open[key] == true) {
            solvedTileCount += 1;
          }
        }
        if (solvedTileCount == 16) {
          alert(`You have won and used ${this.rounds} rounds!`);
        }
      },
      toggle(index) {
        if (this.no_of_clicks > 0 && this.open[index]) {
          return;
        }
        this.no_of_clicks += 1;
        if (this.no_of_clicks == 3) {
          // third click
          if (
            this.tiles[this.firstOpenTile] != this.tiles[this.secondOpenTile]
          ) {
            this.open[this.firstOpenTile] = false;
            this.open[this.secondOpenTile] = false;
          }
          this.firstOpenTile = null;
          this.secondOpenTile = null;
          this.no_of_clicks = 0;
        } else if (this.no_of_clicks == 2) {
          // second click
          this.rounds += 1;
          this.secondOpenTile = index;
          this.open[index] = true;
        } else if (this.no_of_clicks == 1) {
          // first click
          this.firstOpenTile = index;
          this.open[index] = true;
        }
        console.log(this.firstOpenTile);
        console.log(this.secondOpenTile);
      },
      create8uniquepairs() {
        for (let i = 0; i < 8; i++) {
          let png_number = Math.random(30000);
          this.tiles.push(png_number);
          this.tiles.push(png_number);
        }
        this.shuffle(this.tiles);
      },
      shuffle(array) {
        let currentIndex = array.length,
          randomIndex;
        while (currentIndex != 0) {
          randomIndex = Math.floor(Math.random() * currentIndex);
          currentIndex--;
          [array[currentIndex], array[randomIndex]] = [
            array[randomIndex],
            array[currentIndex],
          ];
        }
        return array;
      },
    }));
  });
</script>
